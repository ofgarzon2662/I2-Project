###################################
# USERS
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  labels:
    app: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
        - name: users
          image: us-central1-docker.pkg.dev/class-adv2024-vueibaezis13/i2-project/users:1.0
          ports:
            - containerPort: 3000
          env:
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_name
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_host
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_port
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_user
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_password
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: users-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3000
    type: HTTP
    requestPath: /users/ping
---
kind: Service
apiVersion: v1
metadata:
  name: service-users
  annotations:
    cloud.google.com/backend-config: '{"default": "users-config"}'
spec:
  type: NodePort
  selector:
    app: users
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      nodePort: 31000
---
###################################
# POSTS
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: posts
  labels:
    app: posts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: posts
  template:
    metadata:
      labels:
        app: posts
    spec:
      containers:
        - name: posts
          image: us-central1-docker.pkg.dev/class-adv2024-vueibaezis13/i2-project/posts:1.0
          ports:
            - containerPort: 3001
          env:
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_name
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_host
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_port
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_user
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_password
            - name: "USERS_PATH"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: users_path
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: posts-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3001
    type: HTTP
    requestPath: /posts/ping
---
kind: Service
apiVersion: v1
metadata:
  name: service-posts
  annotations:
    cloud.google.com/backend-config: '{"default": "posts-config"}'
spec:
  type: NodePort
  selector:
    app: posts
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
      nodePort: 31001
---
###################################
# ROUTES
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: routes
  labels:
    app: routes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: routes
  template:
    metadata:
      labels:
        app: routes
    spec:
      containers:
        - name: routes
          image: us-central1-docker.pkg.dev/class-adv2024-vueibaezis13/i2-project/routes:1.0
          ports:
            - containerPort: 3002
          env:
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_name
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_host
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_port
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_user
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_password
            - name: "USERS_PATH"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: users_path
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: routes-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3002
    type: HTTP
    requestPath: /routes/ping
---
kind: Service
apiVersion: v1
metadata:
  name: service-routes
  annotations:
    cloud.google.com/backend-config: '{"default": "routes-config"}'
spec:
  type: NodePort
  selector:
    app: routes
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3002
      nodePort: 31002
---
###################################
# OFFERS
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: offers
  labels:
    app: offers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: offers
  template:
    metadata:
      labels:
        app: offers
    spec:
      containers:
        - name: offers
          image: us-central1-docker.pkg.dev/class-adv2024-vueibaezis13/i2-project/offers:1.0
          ports:
            - containerPort: 3003
          env:
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_name
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_host
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_port
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_user
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db_password
            - name: "USERS_PATH"
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: users_path
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: offers-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3003
    type: HTTP
    requestPath: /offers/ping
---
kind: Service
apiVersion: v1
metadata:
  name: service-offers
  annotations:
    cloud.google.com/backend-config: '{"default": "offers-config"}'
spec:
  type: NodePort
  selector:
    app: offers
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3003
      nodePort: 31003






